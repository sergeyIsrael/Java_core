package Lesson_3_Generic_task_2;

import java.util.ArrayList;
// –ó–∞–¥–∞—á–∞:
//–î–∞–Ω—ã –∫–ª–∞—Å—Å—ã Fruit, Apple extends Fruit, Orange extends Fruit;
//–ö–ª–∞—Å—Å Box, –≤ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å —Ñ—Ä—É–∫—Ç—ã. –ö–æ—Ä–æ–±–∫–∏ —É—Å–ª–æ–≤–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –ø–æ —Ç–∏–ø—É —Ñ—Ä—É–∫—Ç–∞,
// –ø–æ—ç—Ç–æ–º—É –≤ –æ–¥–Ω—É –∫–æ—Ä–æ–±–∫—É –Ω–µ–ª—å–∑—è —Å–ª–æ–∂–∏—Ç—å –∏ —è–±–ª–æ–∫–∏, –∏ –∞–ø–µ–ª—å—Å–∏–Ω—ã;

//–î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ—Ä—É–∫—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ä–æ–±–∫–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ArrayList (ArrayList –æ–±—Å—É–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ);
//–°–¥–µ–ª–∞—Ç—å –º–µ—Ç–æ–¥ getWeight(), –∫–æ—Ç–æ—Ä—ã–π –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤–µ—Å –∫–æ—Ä–æ–±–∫–∏, –∑–Ω–∞—è –≤–µ—Å –æ–¥–Ω–æ–≥–æ —Ñ—Ä—É–∫—Ç–∞ –∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:
// –≤–µ—Å —è–±–ª–æ–∫–∞ ‚Äì 1.0f, –∞–ø–µ–ª—å—Å–∏–Ω–∞ ‚Äì 1.5f (–µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è –Ω–µ –≤–∞–∂–Ω—ã);

//–ù–µ –∑–∞–±—ã–≤–∞–µ–º –ø—Ä–æ –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ—Ä—É–∫—Ç–∞ –≤ –∫–æ—Ä–æ–±–∫—É.

//–í–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ Box —Å–¥–µ–ª–∞—Ç—å –º–µ—Ç–æ–¥ compare(), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ä–∞–≤–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ—Ä–æ–±–∫—É —Å —Ç–æ–π,
// –∫–æ—Ç–æ—Ä—É—é –ø–æ–¥–∞–¥—É—Ç –≤ compare() –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞.
// true ‚Äì –µ—Å–ª–∏ –∏—Ö –º–∞—Å—Å—ã —Ä–∞–≤–Ω—ã, false –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–º —Å–ª—É—á–∞–µ.
// –ú–æ–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –∫–æ—Ä–æ–±–∫–∏ —Å —è–±–ª–æ–∫–∞–º–∏ –∏ –∞–ø–µ–ª—å—Å–∏–Ω–∞–º–∏;

//–ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ—Å—ã–ø–∞—Ç—å —Ñ—Ä—É–∫—Ç—ã –∏–∑ —Ç–µ–∫—É—â–µ–π –∫–æ—Ä–æ–±–∫–∏ –≤ –¥—Ä—É–≥—É—é.
// –ü–æ–º–Ω–∏–º –ø—Ä–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Ñ—Ä—É–∫—Ç–æ–≤: –Ω–µ–ª—å–∑—è —è–±–ª–æ–∫–∏ –≤—ã—Å—ã–ø–∞—Ç—å –≤ –∫–æ—Ä–æ–±–∫—É —Å –∞–ø–µ–ª—å—Å–∏–Ω–∞–º–∏.
// –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –≤ —Ç–µ–∫—É—â–µ–π –∫–æ—Ä–æ–±–∫–µ —Ñ—Ä—É–∫—Ç–æ–≤ –Ω–µ –æ—Å—Ç–∞–µ—Ç—Å—è, –∞ –≤ –¥—Ä—É–≥—É—é –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞—é—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤ –ø–µ—Ä–≤–æ–π;


public class Box<T> {

    //    –∫–ª–∞–¥–µ–º –≤—Å–µ —è–±–ª–æ–∫–∏ –≤ ArrayList.
   private ArrayList<T> fruitList;

    public Box(ArrayList<T> fruitList) {
        this.fruitList = fruitList;
    }



    //     –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤–µ—Å –∫–æ—Ä–æ–±–∫–∏, –∑–Ω–∞—è –≤–µ—Å –æ–¥–Ω–æ–≥–æ —Ñ—Ä—É–∫—Ç–∞ –∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    public T getWeight() {
        T weightBox = 0;
        if (fruitList.size() != 0) {
            for (T fruit : getFruitList() ) {
                weightBox += getFruitList(fruit);
            }
        }
        return weightBox;
    }

    public void showWeight(){
         if ( getWeight() == 0 ) {
            System.out.println("–ö–æ—Ä–æ–±–∫–∞ –ø—É—Å—Ç–∞ üëÄ");
        } else {
            System.out.println("–í–µ—Å –∫–æ—Ä–æ–±–∫–∏ - " + getWeight() + " –∫–≥.");
        }
    }


    //—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–æ—Ä–æ–±–∫–∏
    public boolean compareBool (Box<T> box) {
        return (this.getWeight() - box.getWeight()) == 0;
    }

    public void comparePrint (Box<?> box) {
        if ((this.getWeight() - box.getWeight()) != 0) {
            System.out.println("–í–µ—Å –ö–æ—Ä–æ–±–æ–∫ —Ä–∞–∑–Ω—ã–π");
        } else {
            System.out.println("–í–µ—Å –ö–æ—Ä–æ–±–æ–∫ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π üôå");
        }
    }


    public void moveFruits (Box<T> otherBox) {
        otherBox.getFruitList().addAll(getFruitList());
        this.getFruitList().clear();
        System.out.println("–ü–µ—Ä–µ—Å—ã–ø–∞–ª–∏ —ç—Ç—É –∫–æ—Ä–æ–±–∫—É –≤ –¥—Ä—É–≥—É—é –∫–æ—Ä–æ–±–∫—É.");
    }

    public ArrayList<T> getFruitList() {
        return fruitList;
    }
}